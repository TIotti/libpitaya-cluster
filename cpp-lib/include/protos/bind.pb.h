// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bind.proto

#ifndef PROTOBUF_INCLUDED_bind_2eproto
#define PROTOBUF_INCLUDED_bind_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_bind_2eproto 

namespace protobuf_bind_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_bind_2eproto
namespace protos {
class BindMsg;
class BindMsgDefaultTypeInternal;
extern BindMsgDefaultTypeInternal _BindMsg_default_instance_;
}  // namespace protos
namespace google {
namespace protobuf {
template<> ::protos::BindMsg* Arena::CreateMaybeMessage<::protos::BindMsg>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace protos {

// ===================================================================

class BindMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protos.BindMsg) */ {
 public:
  BindMsg();
  virtual ~BindMsg();

  BindMsg(const BindMsg& from);

  inline BindMsg& operator=(const BindMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BindMsg(BindMsg&& from) noexcept
    : BindMsg() {
    *this = ::std::move(from);
  }

  inline BindMsg& operator=(BindMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BindMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BindMsg* internal_default_instance() {
    return reinterpret_cast<const BindMsg*>(
               &_BindMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(BindMsg* other);
  friend void swap(BindMsg& a, BindMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BindMsg* New() const final {
    return CreateMaybeMessage<BindMsg>(NULL);
  }

  BindMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BindMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BindMsg& from);
  void MergeFrom(const BindMsg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BindMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_uid(::std::string&& value);
  #endif
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // string fid = 2;
  void clear_fid();
  static const int kFidFieldNumber = 2;
  const ::std::string& fid() const;
  void set_fid(const ::std::string& value);
  #if LANG_CXX11
  void set_fid(::std::string&& value);
  #endif
  void set_fid(const char* value);
  void set_fid(const char* value, size_t size);
  ::std::string* mutable_fid();
  ::std::string* release_fid();
  void set_allocated_fid(::std::string* fid);

  // @@protoc_insertion_point(class_scope:protos.BindMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::internal::ArenaStringPtr fid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_bind_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BindMsg

// string uid = 1;
inline void BindMsg::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BindMsg::uid() const {
  // @@protoc_insertion_point(field_get:protos.BindMsg.uid)
  return uid_.GetNoArena();
}
inline void BindMsg::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.BindMsg.uid)
}
#if LANG_CXX11
inline void BindMsg::set_uid(::std::string&& value) {
  
  uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.BindMsg.uid)
}
#endif
inline void BindMsg::set_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.BindMsg.uid)
}
inline void BindMsg::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.BindMsg.uid)
}
inline ::std::string* BindMsg::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:protos.BindMsg.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BindMsg::release_uid() {
  // @@protoc_insertion_point(field_release:protos.BindMsg.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindMsg::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:protos.BindMsg.uid)
}

// string fid = 2;
inline void BindMsg::clear_fid() {
  fid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BindMsg::fid() const {
  // @@protoc_insertion_point(field_get:protos.BindMsg.fid)
  return fid_.GetNoArena();
}
inline void BindMsg::set_fid(const ::std::string& value) {
  
  fid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.BindMsg.fid)
}
#if LANG_CXX11
inline void BindMsg::set_fid(::std::string&& value) {
  
  fid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protos.BindMsg.fid)
}
#endif
inline void BindMsg::set_fid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.BindMsg.fid)
}
inline void BindMsg::set_fid(const char* value, size_t size) {
  
  fid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.BindMsg.fid)
}
inline ::std::string* BindMsg::mutable_fid() {
  
  // @@protoc_insertion_point(field_mutable:protos.BindMsg.fid)
  return fid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BindMsg::release_fid() {
  // @@protoc_insertion_point(field_release:protos.BindMsg.fid)
  
  return fid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindMsg::set_allocated_fid(::std::string* fid) {
  if (fid != NULL) {
    
  } else {
    
  }
  fid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fid);
  // @@protoc_insertion_point(field_set_allocated:protos.BindMsg.fid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_bind_2eproto
